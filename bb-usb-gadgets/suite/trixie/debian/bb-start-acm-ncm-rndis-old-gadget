#!/bin/sh -e
#
# Copyright (c) 2013-2021 Robert Nelson <robertcnelson@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

#Based off:
#https://github.com/beagleboard/meta-beagleboard/blob/master/meta-beagleboard-extras/recipes-support/usb-gadget/gadget-init/g-ether-load.sh

if [ -f /etc/default/bb-mac-addr ] ; then
	. /etc/default/bb-mac-addr
elif [ -f /usr/bin/bb-setup-mac-address ] ; then
	/usr/bin/bb-setup-mac-address
	sync
	. /etc/default/bb-mac-addr
fi

if [ -f /etc/default/bb-boot ] ; then
	. /etc/default/bb-boot
fi

if [ -f /etc/default/generic-sys-mods ] ; then
	. /etc/default/generic-sys-mods
fi

log="usb_gadget:"

usb_gadget="/sys/kernel/config/usb_gadget"

#  idVendor           0x1d6b Linux Foundation
#  idProduct          0x0104 Multifunction Composite Gadget
#  bcdDevice            4.04
#  bcdUSB               2.00

usb_idVendor="0x1d6b"
usb_idProduct="0x0104"
usb_bcdDevice="0x0404"
usb_bcdUSB="0x0200"
usb_serialnr="000000"
usb_product="USB Device"

usb_iserialnumber="1234BBBK5678"
#usb_iserialnumber="$(cat /proc/device-tree/serial-number)"
usb_imanufacturer="$(cat /proc/device-tree/model | awk '{print $1}' | tr -d '\000')"
usb_iproduct="$(cat /proc/device-tree/model | awk '{print $2}' | tr -d '\000')"

#usb0 mass_storage
usb_ms_stall=0
usb_ms_cdrom=0
usb_ms_nofua=1
usb_ms_removable=1
usb_ms_ro=1
usb_ms_imagefile=/etc/bbb.io/templates/beagle-getting-started.img

#mac address:
#cpsw_0_mac = eth0 - wlan0 (in eeprom)
#cpsw_1_mac = usb0 (BeagleBone Side) (in eeprom)
#cpsw_2_mac = usb0 (USB host, pc side) ((cpsw_0_mac + cpsw_2_mac) /2 )
#cpsw_3_mac = wl18xx (AP) (cpsw_0_mac + 3)
#cpsw_4_mac = usb1 (BeagleBone Side)
#cpsw_5_mac = usb1 (USB host, pc side)

if [ -f /etc/default/usb-oem ] ; then
	. /etc/default/usb-oem
fi

run_libcomposite () {
	if [ ! -d /sys/kernel/config/usb_gadget/g_multi/ ] ; then
		echo "${log} Creating g_multi"
		mkdir -p /sys/kernel/config/usb_gadget/g_multi || true
		cd /sys/kernel/config/usb_gadget/g_multi

		echo ${usb_bcdUSB} > bcdUSB
		echo ${usb_idVendor} > idVendor # Linux Foundation
		echo ${usb_idProduct} > idProduct # Multifunction Composite Gadget
		echo ${usb_bcdDevice} > bcdDevice

		# Windows extension to use IAD (Interface Association Descriptor)
		# https://learn.microsoft.com/en-us/windows-hardware/drivers/usbcon/usb-interface-association-descriptor
		echo "0xEF" > bDeviceClass
		echo "0x02" > bDeviceSubClass
		echo "0x01" > bDeviceProtocol
		echo "0x0100" > bcdDevice

		#0x409 = english strings...
		mkdir -p strings/0x409

		echo ${usb_iserialnumber} > strings/0x409/serialnumber
		echo ${usb_imanufacturer} > strings/0x409/manufacturer
		echo ${usb_iproduct} > strings/0x409/product

		mkdir -p configs/c.1/strings/0x409
		echo "BeagleBone Composite" > configs/c.1/strings/0x409/configuration

		echo 500 > configs/c.1/MaxPower

		# Enable use of OS descriptor (for windows to bind drivers like NCM, RNDIS...
		# without additional .inf file)
		mkdir -p os_desc
		echo "1" > os_desc/use
		echo "0xbc" > os_desc/b_vendor_code
		echo "MSFT100" > os_desc/qw_sign

		mkdir -p functions/ncm.usb0

		#Set compatible id so that Windows 10 can match this function to
		#NCM driver more easily.
		mkdir -p functions/ncm.usb0/os_desc/interface.ncm
		echo WINNCM > functions/ncm.usb0/os_desc/interface.ncm/compatible_id

		if [ ! "x${USB0_HOST_ADDR}" = "x" ] ; then
			echo ${USB0_HOST_ADDR} > functions/ncm.usb0/host_addr
			echo ${USB0_DEV_ADDR} > functions/ncm.usb0/dev_addr
		fi

		ln -s functions/ncm.usb0 configs/c.1/

		mkdir -p functions/acm.usb0
		ln -s functions/acm.usb0 configs/c.1/

		if [ ! "x${USB_IMAGE_FILE_DISABLED}" = "xyes" ]; then
			if [ -f ${usb_ms_imagefile} ] ; then
				echo "${log} enable USB mass_storage img file"
				mkdir -p functions/mass_storage.usb0
				echo ${usb_ms_stall} > functions/mass_storage.usb0/stall
				echo ${usb_ms_cdrom} > functions/mass_storage.usb0/lun.0/cdrom
				echo ${usb_ms_nofua} > functions/mass_storage.usb0/lun.0/nofua
				echo ${usb_ms_removable} > functions/mass_storage.usb0/lun.0/removable
				echo ${usb_ms_ro} > functions/mass_storage.usb0/lun.0/ro
				echo ${usb_ms_imagefile} > functions/mass_storage.usb0/lun.0/file

				ln -s functions/mass_storage.usb0 configs/c.1/
			fi
		fi

		#mkdir -p functions/mass_storage.usb0
		#echo 0 > functions/mass_storage.usb0/stall
		#echo /dev/nbd0 > functions/mass_storage.usb0/lun.0/file
		#ln -s functions/mass_storage.usb0 configs/c.1/

		if [ ! "x${USB_UMTPRD_DISABLED}" = "xyes" ]; then
			if [ -f ${USB_UMTPRD_CONFIG} ]; then
				if [ -f /usr/bin/umtprd ] ; then
					mkdir -p functions/ffs.mtp
					ln -s functions/ffs.mtp configs/c.1

					mkdir /dev/ffs-mtp
					mount -t functionfs mtp /dev/ffs-mtp
					/usr/bin/umtprd -conf ${USB_UMTPRD_CONFIG} &
					sleep 1
				fi
			fi
		fi
	fi

	###FIXME:
	sleep 5

	cd /sys/kernel/config/usb_gadget/g_multi

	ls /sys/class/udc/ > UDC

	echo "${log} g_multi Created"
}

use_libcomposite () {
	echo "${log} Looking for libcomposite"
	if [ -d /sys/kernel/config/usb_gadget/ ] ; then
		run_libcomposite
	fi
}

use_libcomposite

#
