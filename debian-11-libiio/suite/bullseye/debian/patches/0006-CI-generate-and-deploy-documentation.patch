From 019549f62675a6f4d83d558873a22421299f1243 Mon Sep 17 00:00:00 2001
From: Raluca Chis <raluca.chis@analog.com>
Date: Wed, 8 Sep 2021 11:26:45 +0300
Subject: [PATCH 06/19] CI: generate and deploy  documentation

- add doxygen job in azure-pipelines.yml to generate and
  deploy documentation to GitHub
- add handle_doxygen functions in before_install_linux and
  make_linux
- modifications in generateDocumentationAndDeploy.sh.in:
  - replace Travis CI variables with Azure Pipelines variables
  - add condition to push documentation only for modifications on
    master and release tags

Signed-off-by: Raluca Chis <raluca.chis@analog.com>
---
 CI/travis/before_install_linux                |  4 +
 .../generateDocumentationAndDeploy.sh.in      | 94 +++++++++----------
 CI/travis/make_linux                          |  8 +-
 azure-pipelines.yml                           | 12 ++-
 4 files changed, 65 insertions(+), 53 deletions(-)

diff --git a/CI/travis/before_install_linux b/CI/travis/before_install_linux
index 200de537..f336c320 100755
--- a/CI/travis/before_install_linux
+++ b/CI/travis/before_install_linux
@@ -102,6 +102,10 @@ handle_debian() {
 	handle_default
 }
 
+handle_doxygen() {
+	handle_default
+}
+
 setup_build_type_env_vars
 
 handle_${BUILD_TYPE}
diff --git a/CI/travis/generateDocumentationAndDeploy.sh.in b/CI/travis/generateDocumentationAndDeploy.sh.in
index dc416e39..37b0c2bf 100644
--- a/CI/travis/generateDocumentationAndDeploy.sh.in
+++ b/CI/travis/generateDocumentationAndDeploy.sh.in
@@ -11,9 +11,6 @@ set -x
 # - An gh-pages branch should already exist. See below for mor info on how to
 #   create a gh-pages branch.
 #
-# Required global variables:
-# - GH_DOC_TOKEN       : Secure token to the github repository.
-#
 # This script will generate Doxygen documentation and push the documentation to
 # the gh-pages branch of a repository specified by $TRAVIS_REPO_SLUG
 # Before this script is used there should already be a gh-pages branch in the
@@ -25,14 +22,14 @@ set -x
 
 ##### Setup this script and get the current gh-pages branch.
 echo 'Setting up the script...'
-GH_REPO_NAME=$(echo "$TRAVIS_REPO_SLUG" | awk -F/ '{print $2}')
+GH_REPO_NAME=$(echo "$BUILD_REPOSITORY_NAME" | awk -F/ '{print $2}')
 
 # Exit with nonzero exit code if anything fails
 set -e
 
 # by the time this script is run, we should have already made the docs
-cd "$TRAVIS_BUILD_DIR/build"
-#docs should be in the $TRAVIS_BUILD_DIR/build/html directory
+cd "$BUILD_SOURCESDIRECTORY/build"
+#docs should be in the $BUILD_SOURCESDIRECTORY/build/html directory
 if [ ! -d "html" ] || [ ! -f "./html/v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@/@PROJECT_NAME@/index.html" ]; then
 	echo '' >&2
 	echo 'Warning: No documentation (html) files have been found!' >&2
@@ -40,58 +37,59 @@ if [ ! -d "html" ] || [ ! -f "./html/v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MIN
 	exit 0
 fi
 
-if [ -z "${TRAVIS_TAG}" ] ; then
+if [ -z "${BUILD_SOURCEBRANCH}" ] ; then
 	echo 'Warning: Not a tag' >&2
 	echo 'Warning: Not going to push the documentation to GitHub!' >&2
 	exit 0
 fi
 
-# Get the current gh-pages branch
-git clone -b gh-pages https://git@github.com/$TRAVIS_REPO_SLUG
-cd "$GH_REPO_NAME"
-
-# Remove everything currently in the gh-pages branch.
-# GitHub is smart enough to know which files have changed and which files have
-# stayed the same and will only update the changed files. So the gh-pages branch
-# can be safely cleaned, and it is sure that everything pushed later is the new
-# documentation.
-rm -rf v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@/*
+if [ "${BUILD_SOURCEBRANCH}" = "refs/heads/master" ] || [ "${BUILD_SOURCEBRANCH}" = "refs/tags/v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@" ]; then
+	# Fetch gh-pages branch
+	git fetch origin +refs/heads/gh-pages:gh-pages
+	git checkout gh-pages
 
-#copy the files over, this should add the new version
-cp -a ../html/* ./
+	# Remove everything currently in the gh-pages branch.
+	# GitHub is smart enough to know which files have changed and which files have
+	# stayed the same and will only update the changed files. So the gh-pages branch
+	# can be safely cleaned, and it is sure that everything pushed later is the new
+	# documentation.
+	rm -rf v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@/*
+	cd ../
+	cp -r ./build/html/v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@ ./
+	cp -r ./build/html/v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@/* ./master
+	rm -rf build
+	rm -rf bindings
 
-##### Configure git.
-# Set the push default to simple i.e. push only the current branch.
-git config --global push.default simple
-# Pretend to be an user called Travis CI.
-git config user.name "Autogenerated by Travis CI"
-git config user.email "robin.getz@analog.com"
+	##### Configure git.
+	# Set the push default to simple i.e. push only the current branch.
+	git config --global push.default simple
 
-# Need to create a .nojekyll file to allow filenames starting with an underscore
-# to be seen on the gh-pages site. Therefore creating an empty .nojekyll file.
-# Presumably this is only needed when the SHORT_NAMES option in Doxygen is set
-# to NO, which it is by default. So creating the file just in case.
-if [ ! -f ".nojekyll" ] ; then
-	touch .nojekyll
-fi
+	git config user.name "Autogenerated by Azure Pipelines"
+	git config user.email "cse-ci-notifications@analog.com"
 
-################################################################################
-##### Upload the documentation to the gh-pages branch of the repository.   #####
+	# Need to create a .nojekyll file to allow filenames starting with an underscore
+	# to be seen on the gh-pages site. Therefore creating an empty .nojekyll file.
+	# Presumably this is only needed when the SHORT_NAMES option in Doxygen is set
+	# to NO, which it is by default. So creating the file just in case.
+	if [ ! -f ".nojekyll" ] ; then
+		touch .nojekyll
+	fi
 
-echo 'Uploading documentation to the gh-pages branch...'
-# Add everything in this directory (the Doxygen code documentation) to the
-# gh-pages branch.
-#
-# GitHub is smart enough to know which files have changed and which files have
-# stayed the same and will only update the changed files.
-git add --all
+	################################################################################
+	##### Upload the documentation to the gh-pages branch of the repository.   #####
 
-# Commit the added files with a title and description containing the Travis CI
-# build number and the GitHub commit reference that issued this build.
-git commit -m "Deploy autogenerated docs for ${GH_REPO_NAME} v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@-g@LIBIIO_VERSION_GIT@" --sign
+	echo 'Uploading documentation to the gh-pages branch...'
+	# Add everything in this directory (the Doxygen code documentation) to the
+	# gh-pages branch.
+	#
+	# GitHub is smart enough to know which files have changed and which files have
+	# stayed the same and will only update the changed files.
+	git add --all
 
-# Force push to the remote gh-pages branch.
-# The ouput is redirected to /dev/null to hide any sensitive credential data
-# that might otherwise be exposed.
-git push --force "https://${GH_DOC_TOKEN}@github.com/${TRAVIS_REPO_SLUG}" > /dev/null 2>&1
+	# Commit the added files with a title and description containing the project
+	# name and the GitHub commit reference that issued this build.
+	git commit --allow-empty --amend -m "Deploy autogenerated docs for ${GH_REPO_NAME} v@LIBIIO_VERSION_MAJOR@.@LIBIIO_VERSION_MINOR@-g@LIBIIO_VERSION_GIT@" --sign
 
+	# Force push to the remote gh-pages branch.
+	git push --force origin gh-pages
+fi
diff --git a/CI/travis/make_linux b/CI/travis/make_linux
index 27e0234b..f5e89374 100755
--- a/CI/travis/make_linux
+++ b/CI/travis/make_linux
@@ -94,8 +94,8 @@ handle_default() {
 
 	echo "### make package"
 	make package
-	if [ -n "${GH_DOC_TOKEN}" ] && \
-			[ -f "./generateDocumentationAndDeploy.sh" ] ; then
+	
+	if [ -f "./generateDocumentationAndDeploy.sh" ] ; then
 		sh generateDocumentationAndDeploy.sh
 	fi
 	cd ..
@@ -135,6 +135,10 @@ handle_generic_docker() {
 	run_docker_script inside_docker.sh
 }
 
+handle_doxygen() {
+	handle_default
+}
+
 setup_build_type_env_vars
 
 handle_${BUILD_TYPE}
diff --git a/azure-pipelines.yml b/azure-pipelines.yml
index a3fcbe98..138993af 100644
--- a/azure-pipelines.yml
+++ b/azure-pipelines.yml
@@ -40,14 +40,12 @@ stages:
           OS_TYPE: 'ubuntu_docker'
           OS_VERSION: bionic
           artifactName: 'Linux-Ubuntu-18.04-x86_64'
-          CI_BUILD_SPHINX_DOCS: 1
         ubuntu_20_04_x86_64:
           imageName: 'ubuntu-latest'
           OS_TYPE: 'ubuntu_docker'
           OS_VERSION: focal
           artifactName: 'Linux-Ubuntu-20.04-x86_64'
           CHECK_AGAINST_KERNEL_HEADER: 1
-          CI_BUILD_SPHINX_DOCS: 1
         debian_buster_arm32v7:
           imageName: 'ubuntu-latest'
           OS_TYPE: 'arm32v7/debian_docker'
@@ -58,23 +56,31 @@ stages:
           OS_TYPE: 'arm64v8/debian_docker'
           OS_VERSION: 'buster'
           artifactName: 'Linux-Debian-Buster-ARM64'
+        doxygen:
+          imageName: 'ubuntu-latest'
+          OS_TYPE: 'doxygen'
+          OS_VERSION: focal
+          artifactName: 'Libiio-documentation'
+          CI_BUILD_SPHINX_DOCS: 1
     pool:
       vmImage: $(imageName)
     steps:
     - checkout: self
       fetchDepth: 1
       clean: true
+      persistCredentials: true
     - script: ./CI/travis/before_install_linux
       displayName: "Install Dependencies"
     - script: ./CI/travis/make_linux
       displayName: "Build"
     - task: CopyFiles@2
+      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), ne(variables['CI_BUILD_SPHINX_DOCS'], '1'))
       inputs:
         sourceFolder: '$(Agent.BuildDirectory)/s/build/'
         contents: '$(Agent.BuildDirectory)/s/build/?(*.deb|*.rpm)'
         targetFolder: '$(Build.ArtifactStagingDirectory)'
     - task: PublishPipelineArtifact@1
-      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
+      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), ne(variables['CI_BUILD_SPHINX_DOCS'], '1'))
       inputs:
         targetPath: '$(Build.ArtifactStagingDirectory)'
         artifactName: '$(artifactName)'
-- 
2.30.2

